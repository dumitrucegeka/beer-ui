{"version":3,"sources":["screens/beers/Beers.module.css","screens/beers/components/beer-search-criteria-dropdown/BeerSearchCriteriaDropdown.module.css","screens/beers/components/beer-list/BeerList.module.css","screens/beers/components/beers-grid/BeersGrid.module.css","context/DisplayTypeContext.tsx","models/BeerSearchCriteria.enum.ts","components/Search.tsx","screens/beers/components/beer-card/BeerCard.tsx","screens/beers/components/beer-list/BeerList.tsx","screens/beers/components/beer-search-criteria-dropdown/BeerSearchCriteriaDropdown.tsx","components/MeasurementComponent.tsx","components/IngredientComponent.tsx","components/IngredientsComponents.tsx","components/BrewingMethodComponent.tsx","components/BrewingMethodsComponent.tsx","components/FoodPairingsTooltip.tsx","screens/beers/components/beers-grid/useBeerColumns.tsx","screens/beers/components/beers-grid/useDataGrid.tsx","screens/beers/components/beers-grid/BeersGrid.tsx","screens/beers/Beers.tsx","models/BeerDetailsKeyMappings.ts","screens/beers/components/food-pairing/FoodPairing.tsx","screens/beers/components/beer-details/BeerDetails.tsx","components/DisplayTypeSwitch.tsx","components/Sidemenu.tsx","App.tsx","reportWebVitals.tsx","index.tsx","screens/beers/components/beer-details/BeerDetails.module.css","screens/beers/components/beer-card/BeerCard.module.css"],"names":["module","exports","DisplayType","DisplayTypeContext","createContext","displayType","LIST","toggleDisplayType","displayName","BeerSearchCriteria","Search","props","onChange","changeHandler","useMemo","debounce","TextField","label","memo","BeerCard","cardStyle","styles","cardContentStyle","cardActionsStyle","beerImageStyle","beerNameStyle","beerTaglineStyle","history","useHistory","beer","clickHandler","useCallback","push","id","Card","variant","className","CardActionArea","CardContent","Typography","color","gutterBottom","name","display","tagline","CardMedia","component","alt","image","image_url","title","onClick","CardActions","Button","BeerList","beers","beerListContainerStyle","map","BeerSearchCriteriaDropdown","selectStyle","formControl","searchCriterias","Object","values","searchCriteria","selectionChangeHandler","FormControl","InputLabel","Select","labelId","value","criteria","MenuItem","useStyles","makeStyles","theme","createStyles","measurementContainer","MeasurementComponent","measurement","unit","IngredientComponent","ingredient","amount","Divider","IngredientsComponent","ingredients","ingredientComponents","entries","entry","ingredientType","Tooltip","disableFocusListener","disableTouchListener","BrewingMethodComponent","brewingMethod","duration","temp","BrewingMethodsComponent","methods","brewingMethodComponents","brewingMethodType","split","step","FoodPairingsTooltip","foodPairings","pairing","useBeerColumns","openDetailsHandler","renderMeasurement","params","row","volume","BEER_COLUMNS","field","width","renderCell","IconButton","getValue","ExitToAppOutlined","headerName","editable","type","method","food_pairing","useDataGrid","rows","columns","classes","rowsPerPageOptions","dataGrid","pageSize","checkboxSelection","disableSelectionOnClick","BeersGrid","beersGridStyle","beerId","findIndex","item","useGrid","Beers","beerListContainer","searchContainerStyle","useState","setBeers","currentSearch","setCurrentSearch","NAME","setSearchCriteria","handleSelectionChange","event","target","handleSearch","searchedValue","getSearchParams","searchString","searchCriteriaValue","beer_name","FOOD_PAIRING","food","join","useEffect","requestConfig","undefined","axios","get","then","result","data","Consumer","isGridView","GRID","mappings","first_brewed","description","abv","ibu","target_fg","target_og","ebc","srm","ph","attenuation_level","brewers_tips","contributed_by","FoodPairing","beerDetailTitle","beerDetailContainer","beerDetailValue","pairings","length","BeerDetails","beerDetailsContainer","imageStyle","location","state","src","keys","beerDetail","index","beerDetailKey","toString","DisplayTypeSwitch","isChecked","FormControlLabel","control","Switch","checked","inputProps","drawerWidth","toolbarHeight","root","appBar","height","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","flexGrow","hide","drawer","flexShrink","drawerPaper","paddingLeft","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","marginTop","contentShift","Sidemenu","useTheme","React","open","setOpen","darkState","setDarkState","palletType","mainPrimaryColor","orange","lightBlue","mainSecondaryColor","deepOrange","deepPurple","darkTheme","createTheme","palette","primary","main","secondary","ThemeProvider","CssBaseline","AppBar","position","clsx","Toolbar","noWrap","align","edge","basename","process","exact","path","Drawer","anchor","paper","direction","List","text","ListItem","button","ListItemIcon","ListItemText","App","displayTypeContext","useContext","setDisplayType","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,qBAAuB,sC,oBCAzCD,EAAOC,QAAU,CAAC,YAAc,kD,oBCAhCD,EAAOC,QAAU,CAAC,uBAAyB,2C,oBCA3CD,EAAOC,QAAU,CAAC,eAAiB,oC,+FCCvBC,E,yDAAAA,K,YAAAA,E,aAAAA,M,KAKL,IAAMC,EAAqBC,wBAAc,CAC9CC,YAAaH,EAAYI,KACzBC,kBAAmB,eAGrBJ,EAAmBK,YAAc,qB,ICZ5BC,E,4WCQCC,EAAS,SAACC,GACd,IAAQC,EAAaD,EAAbC,SACFC,EAAgBC,mBAAQ,kBAAMC,mBAASH,EAAU,OAAM,CAACA,IAE9D,OAAO,cAACI,EAAA,EAAD,CAAWC,MAAM,SAASL,SAAUC,KAG9BK,kBAAKR,I,SDffD,K,4BAAAA,E,aAAAA,M,KAKUA,S,yHE4CAU,GApCE,SAACR,GAChB,IAAQS,EAAmGC,KAAnGD,UAAWE,EAAwFD,KAAxFC,iBAAkBC,EAAsEF,KAAtEE,iBAAkBC,EAAoDH,KAApDG,eAAgBC,EAAoCJ,KAApCI,cAAeC,EAAqBL,KAArBK,iBAChFC,EAAUC,cACRC,EAASlB,EAATkB,KAEFC,EAAeC,uBAAY,WAC/BJ,EAAQK,KAAR,iBAAuBH,EAAKI,IAAM,CAAEJ,WACnC,CAACF,EAASE,IAEb,OACE,mCACE,eAACK,GAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWhB,EAApC,UACE,cAACiB,GAAA,EAAD,CAAgBD,UAAWd,EAA3B,SACE,eAACgB,GAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYH,UAAWX,EAAeU,QAAQ,KAAKK,MAAM,cAAcC,cAAY,EAAnF,SACGZ,EAAKa,OAGR,cAACH,EAAA,EAAD,CAAYH,UAAWV,EAAkBS,QAAQ,UAAUK,MAAM,gBAAgBG,QAAQ,QAAQF,cAAY,EAA7G,SACGZ,EAAKe,UAGR,cAACC,GAAA,EAAD,CAAWT,UAAWZ,EAAgBsB,UAAU,MAAMC,IAAKlB,EAAKa,KAAMM,MAAOnB,EAAKoB,UAAWC,MAAOrB,EAAKa,KAAMS,QAASrB,SAI5H,cAACsB,GAAA,EAAD,CAAahB,UAAWb,EAAxB,SACE,cAAC8B,GAAA,EAAD,CAAQb,MAAM,UAAUL,QAAQ,WAAWgB,QAASrB,EAApD,SACE,cAACS,EAAA,EAAD,oCCvBGe,GAbE,SAAC3C,GAChB,IAAQ4C,EAAU5C,EAAV4C,MACAC,EAA2BnC,KAA3BmC,uBAER,OACE,qBAAKpB,UAAWoB,EAAhB,gBACGD,QADH,IACGA,OADH,EACGA,EAAOE,KAAI,SAAC5B,GAAD,OACV,cAAC,GAAD,CAAwBA,KAAMA,GAAfA,EAAKI,U,0DCuBbyB,GAzBoB,SAAC/C,GAClC,IAAQgD,EAA6BtC,KAA7BsC,YAAaC,EAAgBvC,KAAhBuC,YACfC,EAA4BC,OAAOC,OAAOtD,IACxCuD,EAA2CrD,EAA3CqD,eAAgBC,EAA2BtD,EAA3BsD,uBAExB,OACE,eAACC,GAAA,EAAD,CAAa9B,UAAWwB,EAAxB,UACE,cAACO,GAAA,EAAD,CAAYlC,GAAG,iCAAf,yBACA,cAACmC,GAAA,EAAD,CACEhC,UAAWuB,EACXU,QAAQ,iCACRpC,GAAG,2BACHrB,SAAUqD,EACVK,MAAON,EALT,SAOGH,EAAgBJ,KAAI,SAACc,GAAD,OACnB,cAACC,GAAA,EAAD,CAAUF,MAAOC,EAAjB,SACGA,GAD6BA,Y,+BCtBpCE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,qBAAsB,QAMpBC,GAAuB,SAACC,GAC5B,IACQF,EADQJ,KACRI,qBACAP,EAAgBS,EAAhBT,MAAOU,EAASD,EAATC,KAEf,OACE,sBAAK5C,UAAWyC,EAAhB,UACE,eAACtC,EAAA,EAAD,CAAYJ,QAAQ,UAApB,cAAgCmC,EAAhC,OACA,eAAC/B,EAAA,EAAD,CAAYJ,QAAQ,UAApB,cAAgC6C,EAAhC,WAKS9D,kBAAK4D,I,UCPLG,GAZa,SAACC,GAC3B,IAAQxC,EAAiBwC,EAAjBxC,KAAMyC,EAAWD,EAAXC,OAEd,OACE,qCACE,eAAC5C,EAAA,EAAD,CAAYJ,QAAQ,YAApB,cAAkCO,EAAlC,OACA,cAAC,GAAD,eAA0ByC,IAC1B,cAACC,EAAA,EAAD,QC4BSC,GAnCc,SAACC,GAC5B,IAEMC,EAFUzB,OAAO0B,QAAQF,GAEmB7B,KAAI,SAACgC,GACrD,IAAMC,EAAiBD,EAAM,GAC7B,OAAQC,GACN,IAAK,OACL,IAAK,OACH,OAAQD,EAAM,GAAoBhC,KAAI,SAACyB,GACrC,OACE,qCACE,eAAC3C,EAAA,EAAD,CAAYJ,QAAQ,YAApB,cAAkCuD,EAAlC,OACA,cAAC,GAAD,eAAyBR,UAIjC,IAAK,QACH,OACE,qCACE,eAAC3C,EAAA,EAAD,CAAYJ,QAAQ,YAApB,cAAkCuD,EAAlC,OACA,eAACnD,EAAA,EAAD,CAAYJ,QAAQ,UAApB,cAAgCsD,EAAM,GAAtC,UAGN,QACE,MAAO,OAIb,OACE,cAACE,GAAA,EAAD,CAASC,sBAAoB,EAACC,sBAAoB,EAAC3C,MAAOqC,EAA1D,SACE,cAAChD,EAAA,EAAD,CAAYJ,QAAQ,UAApB,sCClBS2D,GAZgB,SAACC,GAC9B,IAAQC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAElB,OACE,qCACE,eAAC1D,EAAA,EAAD,CAAYJ,QAAQ,YAApB,wBAA4C6D,GAAY,QAAxD,OACA,cAAC,GAAD,eAA0BC,IAC1B,cAACb,EAAA,EAAD,QCmCSc,GA1CiB,SAACC,GAC/B,IAEMC,EAFUtC,OAAO0B,QAAQW,GAES1C,KAAI,SAACgC,GAAW,IAAD,EAC/CY,EAAoBZ,EAAM,GAEhC,OAAQY,GACN,IAAK,eACH,OAAO,cAAC,GAAD,eAA6BZ,EAAM,KAC5C,IAAK,YACH,OAAQA,EAAM,GAAuBhC,KAAI,SAACsC,GACxC,OACE,qCACE,eAACxD,EAAA,EAAD,CAAYJ,QAAQ,YAApB,cAAkCkE,EAAlC,OACA,cAAC,GAAD,eAA4BN,UAIpC,IAAK,QACH,OACE,qCACE,eAACxD,EAAA,EAAD,CAAYJ,QAAQ,YAApB,cAAkCkE,EAAlC,OADF,UAEIZ,EAAM,UAFV,aAEG,EAAsBa,MAAM,KAAK7C,KAAI,SAAC8C,GAAD,OACpC,qCACE,eAAChE,EAAA,EAAD,CAAYJ,QAAQ,UAApB,cAAgCoE,EAAhC,OACA,cAACnB,EAAA,EAAD,aAKV,QACE,MAAO,OAIb,OACE,cAACO,GAAA,EAAD,CAASC,sBAAoB,EAACC,sBAAoB,EAAC3C,MAAOkD,EAA1D,SACE,cAAC7D,EAAA,EAAD,CAAYJ,QAAQ,UAApB,kCCrBSqE,GAnBa,SAAC7F,GAC3B,IAAQ8F,EAAiB9F,EAAjB8F,aAER,OACE,cAACd,GAAA,EAAD,CACEC,sBAAoB,EACpBC,sBAAoB,EACpB3C,MAAOuD,EAAahD,KAAI,SAACiD,GAAD,OACtB,gCACE,cAACnE,EAAA,EAAD,CAAYJ,QAAQ,UAApB,SAA+BuE,IAC/B,cAACtB,EAAA,EAAD,MAFQsB,MAJd,SAUE,cAACnE,EAAA,EAAD,CAAYJ,QAAQ,UAApB,kCCwKSwE,GA3KQ,SAACC,GACtB,IAAMC,EAAoB,SAACC,GACzB,MAAwBA,EAAOC,IAAIC,OAA3B1C,EAAR,EAAQA,MAAOU,EAAf,EAAeA,KACf,OAAQ,cAAC,GAAD,CAAsBV,MAAOA,EAAOU,KAAMA,KAqKpD,MAAO,CAAEiC,aAlJ0B,CACjC,CACEC,MAAO,UACPC,MAAO,GACPC,WAAY,SAACN,GAAD,OACV,cAACO,EAAA,EAAD,CAAYlE,QAAS,kBAAMyD,EAAmB,GAAD,OAAIE,EAAOQ,SAASR,EAAO7E,GAAI,SAA5E,SACE,cAACsF,GAAA,EAAD,QAIN,CACEL,MAAO,KACPM,WAAY,KACZL,MAAO,KAET,CACED,MAAO,OACPM,WAAY,OACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,UACPM,WAAY,UACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,eACPM,WAAY,eACZE,KAAM,SACNP,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,UACPM,WAAY,UACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,cACPM,WAAY,cACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,MACPM,WAAY,MACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,MACPM,WAAY,MACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,YACPM,WAAY,YACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,YACPM,WAAY,YACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,MACPM,WAAY,MACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,MACPM,WAAY,MACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,KACPM,WAAY,KACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,oBACPM,WAAY,oBACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,SACPM,WAAY,SACZL,MAAO,IACPM,UAAU,EACVL,WAAYP,GAKd,CACEK,MAAO,cACPM,WAAY,cACZL,MAAO,IACPM,UAAU,EACVL,WAAYP,GAEd,CACEK,MAAO,SACPM,WAAY,SACZL,MAAO,IACPM,UAAU,EACVL,WA/HiB,SAACN,GACpB,IAAMX,EAAUW,EAAOC,IAAIY,OAC3B,OAAO,cAAC,GAAD,eAA6BxB,MA+HpC,CACEe,MAAO,cACPM,WAAY,cACZL,MAAO,IACPM,UAAU,EACVL,WA3IsB,SAACN,GACzB,IAAMxB,EAAcwB,EAAOC,IAAIzB,YAC/B,OAAO,cAAC,GAAD,eAA0BA,MA2IjC,CACE4B,MAAO,eACPM,WAAY,eACZL,MAAO,IACPM,UAAU,EACVL,WAxIuB,SAACN,GAC1B,IAAML,EAAeK,EAAOC,IAAIa,aAEhC,OAAO,cAAC,GAAD,CAAqBnB,aAAcA,MAuI1C,CACES,MAAO,eACPM,WAAY,cACZL,MAAO,IACPM,UAAU,GAEZ,CACEP,MAAO,iBACPM,WAAY,iBACZL,MAAO,IACPM,UAAU,M,UC9IDI,GA1BK,SAAClH,GACnB,IAAQmH,EAA+CnH,EAA/CmH,KAAMC,EAAyCpH,EAAzCoH,QAASC,EAAgCrH,EAAhCqH,QAASC,EAAuBtH,EAAvBsH,mBAsBhC,MAAO,CAAEC,SAnBP,cAAC,KAAD,CACE9F,UAAW4F,EACXF,KAAMA,EACNC,QAASA,EASTI,SAAU,GACVF,mBAAoBA,EACpBG,mBAAiB,EACjBC,yBAAuB,MCOdC,GAzBG,SAAC3H,GACjB,IAAMgB,EAAUC,cAER2B,EAAU5C,EAAV4C,MACAgF,EAAmBlH,KAAnBkH,eAEF3B,EAAqB7E,uBACzB,SAACyG,GACC,IAAM3G,EAAO0B,EAAMA,EAAMkF,WAAU,SAACC,GAAD,OAAUA,EAAKzG,MAAQuG,MAC1D7G,EAAQK,KAAR,iBAAuBH,EAAKI,IAAM,CAAEJ,WAEtC,CAACF,EAAS4B,IAGNwE,EAAUpB,GAAeC,GAQ/B,OAPqB+B,GAAQ,CAC3Bb,KAAMvE,EACNwE,QAASA,EAAQd,aACjBe,QAASO,EACTN,mBAAoB,CAAC,EAAG,GAAI,GAAI,MAJ1BC,UCyCKU,GAxDD,WAEwCvH,KAA5CwH,kBADR,IAC2BC,EAAyBzH,KAAzByH,qBAE3B,EAA0BC,mBAAiB,IAA3C,mBAAOxF,EAAP,KAAcyF,EAAd,KACA,EAA0CD,mBAAS,IAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAA4CH,mBAAStI,GAAmB0I,MAAxE,mBAAOnF,EAAP,KAAuBoF,EAAvB,KAEMC,EAAwBtH,uBAAY,SAACuH,GACzCF,EAAkBE,EAAMC,OAAOjF,SAC9B,IAEGkF,EAAe,SAACF,GACpB,IAAMG,EAAiBH,EAAMC,OAA4BjF,MACzD4E,EAAiBO,IAGbC,EAAkB,SAACC,EAAsBC,GAC7C,OAAQA,GACN,KAAKnJ,GAAmB0I,KACtB,MAAO,CAAEU,UAAWF,GACtB,KAAKlJ,GAAmBqJ,aACtB,MAAO,CAAEC,KAAMJ,EAAarD,MAAM,KAAK0D,KAAK,MAC9C,QACE,OAAO,OAab,OATAC,qBAAU,WACR,IAAMC,EAAgBjB,EAAgB,CAAEnC,OAAQ4C,EAAgBT,EAAejF,SAAoBmG,EAEnGC,IACGC,IADH,UA9Ba,6BA8Bb,UAC0BH,GACvBI,MAAK,SAACC,GAAD,OAAYA,EAAOC,QACxBF,MAAK,SAACC,GAAD,OAAYvB,EAASuB,QAC5B,CAACtB,EAAejF,IAGjB,cAAC7D,EAAmBsK,SAApB,UACG,YAAyC,IAAtCpK,EAAqC,EAArCA,YACIqK,GADiC,EAAxBnK,kBACIF,IAAgBH,EAAYyK,MAE/C,OACE,sBAAKvI,UAAU,MAAf,UACE,sBAAKA,UAAW0G,EAAhB,UACE,cAAC,GAAD,CAAQlI,SAAU4I,IAClB,cAAC,GAAD,CAA4BxF,eAAgBA,EAAgBC,uBAAwBoF,OAErFqB,EAAa,cAAC,GAAD,CAAWnH,MAAOA,IAAY,cAAC,GAAD,CAAUA,MAAOA,W,6BCzC1DqH,GAlB6B,CAC1C3I,GAAI,KACJS,KAAM,YACNE,QAAS,UACTiI,aAAc,eACdC,YAAa,cACbC,IAAK,MACLC,IAAK,MACLC,UAAW,YACXC,UAAW,YACXC,IAAK,sCACLC,IAAK,oCACLC,GAAI,KACJC,kBAAmB,oBACnBC,aAAc,eACdC,eAAgB,kBCKHC,GAZK,SAAC9K,GACnB,IAAQ+K,EAA0DrK,KAA1DqK,gBAAiBC,EAAyCtK,KAAzCsK,oBAAqBC,EAAoBvK,KAApBuK,gBACtCC,EAAalL,EAAbkL,SAER,OAAe,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUC,QACf,sBAAK1J,UAAWuJ,EAAhB,UACE,mBAAGvJ,UAAWsJ,EAAd,2BACA,mBAAGtJ,UAAWwJ,EAAd,SAAgCC,EAAS7B,KAAK,WAE9C,MCqBS+B,GAhCK,SAACpL,GAAgB,IAAD,IAC1BqL,EAA4F3K,KAA5F2K,qBAAsBL,EAAsEtK,KAAtEsK,oBAAqBD,EAAiDrK,KAAjDqK,gBAAiBE,EAAgCvK,KAAhCuK,gBAAiBK,EAAe5K,KAAf4K,WAC/EpK,EAAI,sBAAQlB,QAAR,IAAQA,GAAR,UAAQA,EAAOuL,gBAAf,iBAAQ,EAAiBC,aAAzB,aAAQ,EAAwBtK,MAO1C,OACE,sBAAKO,UAAW4J,EAAhB,UACE,qBAAK5J,UAAW6J,EAAYG,IAAKvK,EAAKoB,UAAWF,IAAKlB,EAAKa,OAC3D,cAAC,GAAD,CAAamJ,SAAQ,aAAMhK,EAAK+F,gBAEhC,8BACG9D,OAAOuI,KAAKxK,GAAM4B,KAAI,SAAC6I,EAAYC,GAX1C,IAAmCC,EAY3B,GAA8C,kBAAnC3K,EAAKyK,IAAyD,cAAfA,GAA6C,iBAAfA,EAKxF,OACE,sBAA8ClK,UAAWuJ,EAAzD,UACE,mBAAGvJ,UAAWsJ,EAAd,UAnBuBc,EAmBmCF,EAlBpD1B,GAAS4B,IACPA,KAkBR,mBAAGpK,UAAWwJ,EAAd,SAAgC/J,EAAKyK,OAFvC,UAAaC,EAAME,YAAN,OAAmB5K,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMa,iBCPnCgK,GAjBW,WACxB,OACE,cAACvM,EAAmBsK,SAApB,UACG,YAAyC,IAAtCpK,EAAqC,EAArCA,YAAaE,EAAwB,EAAxBA,kBACToM,EAAYtM,IAAgBH,EAAYyK,KAE9C,OACE,cAACiC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASJ,EAAW/L,SAAUL,EAAmBiC,MAAM,UAAUwK,WAAY,CAAE,aAAc,iCAC9G/L,MAAM,kBCqBZgM,GAAc,IACdC,GAAgB,OAChBzI,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuI,KAAM,CACJxK,QAAS,QAEXyK,OAAQ,CACNC,OAAQH,GACRI,WAAY3I,EAAM4I,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQ9I,EAAM4I,YAAYE,OAAOC,MACjC1H,SAAUrB,EAAM4I,YAAYvH,SAAS2H,iBAGzCC,YAAa,CACXzG,MAAM,eAAD,OAAiB8F,GAAjB,OACLK,WAAY3I,EAAM4I,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQ9I,EAAM4I,YAAYE,OAAOI,QACjC7H,SAAUrB,EAAM4I,YAAYvH,SAAS8H,iBAEvCC,YAAad,IAEf/J,MAAO,CACL8K,SAAU,GAEZC,KAAM,CACJtL,QAAS,QAEXuL,OAAQ,CACN/G,MAAO8F,GACPkB,WAAY,GAEdC,YAAa,CACXjH,MAAO8F,GACPoB,YAAa,QAEfC,aAAa,yBACX3L,QAAS,OACT4L,WAAY,SACZC,QAAS7J,EAAM8J,QAAQ,EAAG,IAEvB9J,EAAM+J,OAAOC,SALN,IAMVC,eAAgB,eAElBC,QAAS,CACPb,SAAU,EACVQ,QAAS7J,EAAM8J,QAAQ,GACvBnB,WAAY3I,EAAM4I,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9I,EAAM4I,YAAYE,OAAOC,MACjC1H,SAAUrB,EAAM4I,YAAYvH,SAAS2H,gBAEvCmB,UAAW5B,GACXa,aAAa,KAEfgB,aAAc,CACZzB,WAAY3I,EAAM4I,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9I,EAAM4I,YAAYE,OAAOI,QACjC7H,SAAUrB,EAAM4I,YAAYvH,SAAS8H,iBAEvCC,YAAa,QAwHJiB,GAlHE,WACf,IAAMhH,EAAUvD,KACVE,EAAQsK,cACd,EAAwBC,IAAMnG,UAAS,GAAvC,mBAAOoG,EAAP,KAAaC,EAAb,KAEA,EAAkCrG,oBAAS,GAA3C,mBAAOsG,EAAP,KAAkBC,EAAlB,KAEMC,EAAaF,EAAY,OAAS,QAElCG,EAAmBH,EAAYI,IAAO,KAAOC,IAAU,KACvDC,EAAqBN,EAAYO,IAAW,KAAOC,IAAW,KAE9DC,EAAYC,YAAY,CAC5BC,QAAS,CACPtI,KAAM6H,EACNU,QAAS,CACPC,KAAMV,GAERW,UAAW,CACTD,KAAMP,MAiBZ,OACE,cAACS,EAAA,EAAD,CAAezL,MAAOmL,EAAtB,SACE,sBAAK1N,UAAW4F,EAAQmF,KAAxB,UACE,cAACkD,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CACEC,SAAS,QACTnO,UAAWoO,YAAKxI,EAAQoF,OAAT,eACZpF,EAAQ4F,YAAcuB,IAH3B,SAME,eAACsB,EAAA,EAAD,WACE,cAAClO,EAAA,EAAD,CAAYJ,QAAQ,KAAKuO,QAAM,EAACC,MAAM,SAASvO,UAAW4F,EAAQ9E,MAAlE,uCAGA,cAACmE,EAAA,EAAD,CAAY7E,MAAM,UAAU,aAAW,cAAcoO,KAAK,MAAMzN,QAvBjD,WACvBiM,GAAQ,IAsB2FhN,UAAWoO,YAAKrB,GAAQnH,EAAQiG,MAA3H,SACE,cAAC,IAAD,WAKN,sBACE7L,UAAWoO,YAAKxI,EAAQ6G,QAAT,eACZ7G,EAAQ+G,aAAeI,IAF5B,SAKE,cAAC,IAAD,CAAQ0B,SAAUC,WAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIlO,UAAW8F,KACjC,cAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,SAASlO,UAAW8F,KACtC,cAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,aAAalO,UAAWiJ,YAKhD,eAACkF,EAAA,EAAD,CACE7O,UAAW4F,EAAQkG,OACnB/L,QAAQ,aACR+O,OAAO,QACP/B,KAAMA,EACNnH,QAAS,CACPmJ,MAAOnJ,EAAQoG,aANnB,UASE,sBAAKhM,UAAW4F,EAAQsG,aAAxB,UACE,cAACjH,EAAA,EAAD,CAAYlE,QAjDI,WACxBiM,GAAQ,IAgDA,SAA6D,QAApBzK,EAAMyM,UAAsB,cAAC,IAAD,IAAuB,cAAC,IAAD,MAC5F,cAAC7O,EAAA,EAAD,CAAYJ,QAAQ,KAAKwO,MAAM,SAA/B,yBAKF,cAACvL,EAAA,EAAD,IAEA,cAAC,GAAD,IAEA,cAACA,EAAA,EAAD,IAEA,cAACwH,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASsC,EAAWzO,SAtErB,WACxB0O,GAAcD,IAqE4D7M,MAAM,UAAUwK,WAAY,CAAE,aAAc,iCAC9G/L,MAAM,cAGR,cAACmE,EAAA,EAAD,IAEA,cAACiM,EAAA,EAAD,UACG,CAAC,WAAY,QAAS,QAAQ5N,KAAI,SAAC6N,EAAM/E,GAAP,OACjC,eAACgF,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UAAelF,EAAQ,IAAM,EAAI,cAAC,IAAD,IAAgB,cAAC,IAAD,MACjD,cAACmF,EAAA,EAAD,CAAczB,QAASqB,MAFHA,iBCrLrBK,GAfH,WACV,IAAMC,EAAqBC,qBAAW1R,GACtC,EAAsC4I,mBAAS6I,EAAmBvR,aAAlE,mBAAOA,EAAP,KAAoByR,EAApB,KAMA,OACE,cAAC3R,EAAmB4R,SAApB,CAA6BzN,MAAO,CAAEjE,cAAaE,kBAL3B,WACxBuR,EAAezR,IAAgBH,EAAYyK,KAAOzK,EAAYI,KAAOJ,EAAYyK,QAIjF,SACE,cAAC,GAAD,OCASqH,GAbS,SAACC,GACnBA,GAAeA,aAAuBC,UAExC,8BAAqB5H,MAAK,YAAkD,IAA/C6H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,GAAgBa,QAAQC,M,mBCjBxB9S,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,WAAa,gCAAgC,oBAAsB,yCAAyC,gBAAkB,qCAAqC,gBAAkB,uC,mBCAxQD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,iBAAmB,mCAAmC,iBAAmB,mCAAmC,eAAiB,oC","file":"static/js/main.2956de8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainerStyle\":\"Beers_searchContainerStyle__1lIpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectStyle\":\"BeerSearchCriteriaDropdown_selectStyle__38Adx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beerListContainerStyle\":\"BeerList_beerListContainerStyle__1XYpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beersGridStyle\":\"BeersGrid_beersGridStyle__1-hFq\"};","import React, { createContext } from 'react';\r\n\r\nexport enum DisplayType {\r\n  LIST = 'LIST',\r\n  GRID = 'GRID',\r\n}\r\n\r\nexport const DisplayTypeContext = createContext({\r\n  displayType: DisplayType.LIST,\r\n  toggleDisplayType: () => {},\r\n});\r\n\r\nDisplayTypeContext.displayName = 'DisplayTypeContext';\r\n","enum BeerSearchCriteria {\r\n  FOOD_PAIRING = 'Food Pairing',\r\n  NAME = 'Name',\r\n}\r\n\r\nexport default BeerSearchCriteria;\r\n","import { debounce } from 'lodash';\r\nimport React, { ChangeEvent, memo, useMemo } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport interface SearchProps {\r\n  onChange: (event: ChangeEvent) => void;\r\n}\r\n\r\nconst Search = (props: SearchProps) => {\r\n  const { onChange } = props;\r\n  const changeHandler = useMemo(() => debounce(onChange, 500), [onChange]);\r\n\r\n  return <TextField label='Search' onChange={changeHandler} />;\r\n};\r\n\r\nexport default memo(Search);\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, CardActionArea, CardActions, CardMedia } from '@material-ui/core';\r\nimport styles from './BeerCard.module.css';\r\nimport { Beer } from '../../../../models/Beer.interface';\r\n\r\ninterface BeerCardProps {\r\n  beer: Beer;\r\n}\r\n\r\nconst BeerCard = (props: BeerCardProps) => {\r\n  const { cardStyle, cardContentStyle, cardActionsStyle, beerImageStyle, beerNameStyle, beerTaglineStyle } = styles;\r\n  const history = useHistory();\r\n  const { beer } = props;\r\n\r\n  const clickHandler = useCallback(() => {\r\n    history.push(`/beers/${beer.id}`, { beer });\r\n  }, [history, beer]);\r\n\r\n  return (\r\n    <>\r\n      <Card variant='outlined' className={cardStyle}>\r\n        <CardActionArea className={cardContentStyle}>\r\n          <CardContent>\r\n            <Typography className={beerNameStyle} variant='h6' color='textPrimary' gutterBottom>\r\n              {beer.name}\r\n            </Typography>\r\n\r\n            <Typography className={beerTaglineStyle} variant='caption' color='textSecondary' display='block' gutterBottom>\r\n              {beer.tagline}\r\n            </Typography>\r\n\r\n            <CardMedia className={beerImageStyle} component='img' alt={beer.name} image={beer.image_url} title={beer.name} onClick={clickHandler} />\r\n          </CardContent>\r\n        </CardActionArea>\r\n\r\n        <CardActions className={cardActionsStyle}>\r\n          <Button color='primary' variant='outlined' onClick={clickHandler}>\r\n            <Typography>See Details</Typography>\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BeerCard;\r\n","import React from 'react';\r\nimport { Beer } from '../../../../models/Beer.interface';\r\nimport styles from './BeerList.module.css';\r\nimport BeerCard from '../beer-card/BeerCard';\r\n\r\nconst BeerList = (props: { beers: Beer[] }) => {\r\n  const { beers } = props;\r\n  const { beerListContainerStyle } = styles;\r\n\r\n  return (\r\n    <div className={beerListContainerStyle}>\r\n      {beers?.map((beer) => (\r\n        <BeerCard key={beer.id} beer={beer} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeerList;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { FormControl, FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport styles from './BeerSearchCriteriaDropdown.module.css';\r\nimport BeerSearchCriteria from '../../../../models/BeerSearchCriteria.enum';\r\n\r\nexport interface BeerSearchCriteriaProps {\r\n  searchCriteria: BeerSearchCriteria;\r\n  selectionChangeHandler: (event: any) => void;\r\n}\r\n\r\nconst BeerSearchCriteriaDropdown = (props: BeerSearchCriteriaProps) => {\r\n  const { selectStyle, formControl } = styles;\r\n  const searchCriterias: string[] = Object.values(BeerSearchCriteria);\r\n  const { searchCriteria, selectionChangeHandler } = props;\r\n\r\n  return (\r\n    <FormControl className={formControl}>\r\n      <InputLabel id='demo-simple-select-error-label'>Search for </InputLabel>\r\n      <Select\r\n        className={selectStyle}\r\n        labelId='demo-simple-select-error-label'\r\n        id='demo-simple-select-error'\r\n        onChange={selectionChangeHandler}\r\n        value={searchCriteria}\r\n      >\r\n        {searchCriterias.map((criteria: string) => (\r\n          <MenuItem value={criteria} key={criteria}>\r\n            {criteria}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default BeerSearchCriteriaDropdown;\r\n","import React, { memo } from 'react';\r\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport Measurement from '../models/Measurement.interface';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    measurementContainer: {\r\n      // TODO - I want some styling or delete me\r\n    },\r\n  })\r\n);\r\n\r\nconst MeasurementComponent = (measurement: Measurement) => {\r\n  const classes = useStyles();\r\n  const { measurementContainer } = classes;\r\n  const { value, unit } = measurement;\r\n\r\n  return (\r\n    <div className={measurementContainer}>\r\n      <Typography variant='caption'> {value} </Typography>\r\n      <Typography variant='caption'> {unit} </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MeasurementComponent);\r\n","import React from 'react';\r\n\r\nimport { Divider, Typography } from '@material-ui/core';\r\nimport { Ingredient } from '../models/Ingredient.interface';\r\nimport MeasurementComponent from './MeasurementComponent';\r\n\r\nconst IngredientComponent = (ingredient: Ingredient) => {\r\n  const { name, amount } = ingredient;\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='subtitle2'> {name} </Typography>\r\n      <MeasurementComponent {...amount} />\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientComponent;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { Tooltip, Typography } from '@material-ui/core';\r\nimport { Ingredient, Ingredients, IngredientType } from '../models/Ingredient.interface';\r\nimport IngredientComponent from './IngredientComponent';\r\n\r\nconst IngredientsComponent = (ingredients: Ingredients) => {\r\n  const entries = Object.entries(ingredients);\r\n\r\n  const ingredientComponents: ReactNode[] = entries.map((entry: any) => {\r\n    const ingredientType = entry[0] as IngredientType;\r\n    switch (ingredientType) {\r\n      case 'hops':\r\n      case 'malt':\r\n        return (entry[1] as Ingredient[]).map((ingredient: Ingredient) => {\r\n          return (\r\n            <>\r\n              <Typography variant='subtitle1'> {ingredientType} </Typography>\r\n              <IngredientComponent {...ingredient} />\r\n            </>\r\n          );\r\n        });\r\n      case 'yeast':\r\n        return (\r\n          <>\r\n            <Typography variant='subtitle1'> {ingredientType} </Typography>\r\n            <Typography variant='caption'> {entry[1]} </Typography>\r\n          </>\r\n        );\r\n      default:\r\n        return [];\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Tooltip disableFocusListener disableTouchListener title={ingredientComponents}>\r\n      <Typography variant='caption'>Hover For Ingredients</Typography>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default IngredientsComponent;\r\n","import React from 'react';\r\n\r\nimport { Divider, Typography } from '@material-ui/core';\r\nimport { BrewingMethod } from '../models/BrewingMethod.interface';\r\nimport MeasurementComponent from './MeasurementComponent';\r\n\r\nconst BrewingMethodComponent = (brewingMethod: BrewingMethod) => {\r\n  const { duration, temp } = brewingMethod;\r\n\r\n  return (\r\n    <>\r\n      <Typography variant='subtitle2'> Duration: {duration || 'unset'} </Typography>\r\n      <MeasurementComponent {...temp} />\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrewingMethodComponent;\r\n","import React from 'react';\r\n\r\nimport { Divider, Tooltip, Typography } from '@material-ui/core';\r\nimport { BrewingMethod, BrewingMethods, BrewingMethodType } from '../models/BrewingMethod.interface';\r\nimport BrewingMethodComponent from './BrewingMethodComponent';\r\n\r\nconst BrewingMethodsComponent = (methods: BrewingMethods) => {\r\n  const entries = Object.entries(methods);\r\n\r\n  const brewingMethodComponents = entries.map((entry) => {\r\n    const brewingMethodType = entry[0] as BrewingMethodType;\r\n\r\n    switch (brewingMethodType) {\r\n      case 'fermentation':\r\n        return <BrewingMethodComponent {...(entry[1] as BrewingMethod)} />;\r\n      case 'mash_temp':\r\n        return (entry[1] as BrewingMethod[]).map((brewingMethod: BrewingMethod) => {\r\n          return (\r\n            <>\r\n              <Typography variant='subtitle1'> {brewingMethodType} </Typography>\r\n              <BrewingMethodComponent {...brewingMethod} />\r\n            </>\r\n          );\r\n        });\r\n      case 'twist':\r\n        return (\r\n          <>\r\n            <Typography variant='subtitle1'> {brewingMethodType} </Typography>\r\n            {(entry[1] as string)?.split(',').map((step: string) => (\r\n              <>\r\n                <Typography variant='caption'> {step} </Typography>\r\n                <Divider />\r\n              </>\r\n            ))}\r\n          </>\r\n        );\r\n      default:\r\n        return [];\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Tooltip disableFocusListener disableTouchListener title={brewingMethodComponents}>\r\n      <Typography variant='caption'>Hover For Methods</Typography>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default BrewingMethodsComponent;\r\n","import React from 'react';\r\nimport { Tooltip, Typography, Divider } from '@material-ui/core';\r\n\r\nconst FoodPairingsTooltip = (props: { foodPairings: string[] }) => {\r\n  const { foodPairings } = props;\r\n\r\n  return (\r\n    <Tooltip\r\n      disableFocusListener\r\n      disableTouchListener\r\n      title={foodPairings.map((pairing: string) => (\r\n        <div key={pairing}>\r\n          <Typography variant='caption'>{pairing}</Typography>\r\n          <Divider />\r\n        </div>\r\n      ))}\r\n    >\r\n      <Typography variant='caption'>Hover for details</Typography>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default FoodPairingsTooltip;\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport { GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\nimport { Divider, IconButton, Tooltip, Typography } from '@material-ui/core';\r\nimport { ExitToAppOutlined } from '@material-ui/icons';\r\n\r\nimport MeasurementComponent from '../../../../components/MeasurementComponent';\r\nimport Measurement from '../../../../models/Measurement.interface';\r\nimport { Ingredients } from '../../../../models/Ingredient.interface';\r\nimport IngredientsComponent from '../../../../components/IngredientsComponents';\r\nimport { BrewingMethods } from '../../../../models/BrewingMethod.interface';\r\nimport BrewingMethodsComponent from '../../../../components/BrewingMethodsComponent';\r\nimport FoodPairingsTooltip from '../../../../components/FoodPairingsTooltip';\r\n\r\nconst useBeerColumns = (openDetailsHandler: (beerId: string) => void) => {\r\n  const renderMeasurement = (params: GridValueGetterParams) => {\r\n    const { value, unit } = params.row.volume as Measurement;\r\n    return (<MeasurementComponent value={value} unit={unit} />) as ReactNode;\r\n  };\r\n\r\n  const renderIngredients = (params: GridValueGetterParams) => {\r\n    const ingredients = params.row.ingredients as Ingredients;\r\n    return <IngredientsComponent {...ingredients} />;\r\n  };\r\n\r\n  const renderMethod = (params: GridValueGetterParams) => {\r\n    const methods = params.row.method as BrewingMethods;\r\n    return <BrewingMethodsComponent {...methods} />;\r\n  };\r\n\r\n  const renderFoodPairings = (params: GridValueGetterParams) => {\r\n    const foodPairings = params.row.food_pairing as string[];\r\n\r\n    return <FoodPairingsTooltip foodPairings={foodPairings} />;\r\n  };\r\n\r\n  const BEER_COLUMNS: GridColDef[] = [\r\n    {\r\n      field: 'details',\r\n      width: 60,\r\n      renderCell: (params: GridValueGetterParams) => (\r\n        <IconButton onClick={() => openDetailsHandler(`${params.getValue(params.id, 'id')}`)}>\r\n          <ExitToAppOutlined />\r\n        </IconButton>\r\n      ),\r\n    },\r\n    {\r\n      field: 'id',\r\n      headerName: 'ID',\r\n      width: 120,\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'Name',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'tagline',\r\n      headerName: 'Tagline',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'first_brewed',\r\n      headerName: 'First Brewed',\r\n      type: 'number',\r\n      width: 110,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'tagline',\r\n      headerName: 'Tagline',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'abv',\r\n      headerName: 'ABV',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'ibu',\r\n      headerName: 'IBU',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'target_fg',\r\n      headerName: 'Target FG',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'target_og',\r\n      headerName: 'Target OG',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'ebc',\r\n      headerName: 'EBC',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'srm',\r\n      headerName: 'SRM',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'ph',\r\n      headerName: 'PH',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'attenuation_level',\r\n      headerName: 'Attenuation Level',\r\n      width: 200,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'volume',\r\n      headerName: 'Volume',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: renderMeasurement,\r\n      // valueGetter: (params: GridValueGetterParams) => {\r\n      //   return `${params.getValue(params.id, 'volume') || ''} ${params.getValue(params.id, 'volume') || ''}` as GridCellValue;\r\n      // },\r\n    },\r\n    {\r\n      field: 'boil_volume',\r\n      headerName: 'Boil Volume',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: renderMeasurement,\r\n    },\r\n    {\r\n      field: 'method',\r\n      headerName: 'Method',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: renderMethod,\r\n    },\r\n    {\r\n      field: 'ingredients',\r\n      headerName: 'Ingredients',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: renderIngredients,\r\n    },\r\n    {\r\n      field: 'food_pairing',\r\n      headerName: 'Food Pairing',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: renderFoodPairings,\r\n    },\r\n    {\r\n      field: 'brewers_tips',\r\n      headerName: 'Brewer Tips',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'contributed_by',\r\n      headerName: 'Contributed By',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n  ];\r\n\r\n  return { BEER_COLUMNS };\r\n};\r\n\r\nexport default useBeerColumns;\r\n","import React from 'react';\r\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\r\n\r\ninterface UseDataGridProps {\r\n  rows: any[];\r\n  columns: GridColDef[];\r\n  classes: string;\r\n  rowsPerPageOptions: number[];\r\n}\r\n\r\nconst useDataGrid = (props: UseDataGridProps) => {\r\n  const { rows, columns, classes, rowsPerPageOptions } = props;\r\n\r\n  const dataGrid = (\r\n    <DataGrid\r\n      className={classes}\r\n      rows={rows}\r\n      columns={columns}\r\n      // components={\r\n      // {\r\n      // ColumnMenu: MyCustomColumnMenu,\r\n      //   }\r\n      // }\r\n      // componentsProps={{\r\n      //   columnMenu: { background: 'red', counter: rows.length },\r\n      // }}\r\n      pageSize={25}\r\n      rowsPerPageOptions={rowsPerPageOptions}\r\n      checkboxSelection\r\n      disableSelectionOnClick\r\n    />\r\n  );\r\n\r\n  return { dataGrid };\r\n};\r\n\r\nexport default useDataGrid;\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Beer } from '../../../../models/Beer.interface';\r\nimport styles from './BeersGrid.module.css';\r\nimport useBeerColumns from './useBeerColumns';\r\nimport useGrid from './useDataGrid';\r\n\r\ninterface BeersGridProps {\r\n  beers: Beer[];\r\n}\r\n\r\nconst BeersGrid = (props: BeersGridProps) => {\r\n  const history = useHistory();\r\n\r\n  const { beers } = props;\r\n  const { beersGridStyle } = styles;\r\n\r\n  const openDetailsHandler = useCallback(\r\n    (beerId) => {\r\n      const beer = beers[beers.findIndex((item) => item.id === +beerId)];\r\n      history.push(`/beers/${beer.id}`, { beer });\r\n    },\r\n    [history, beers]\r\n  );\r\n\r\n  const columns = useBeerColumns(openDetailsHandler);\r\n  const { dataGrid } = useGrid({\r\n    rows: beers,\r\n    columns: columns.BEER_COLUMNS,\r\n    classes: beersGridStyle,\r\n    rowsPerPageOptions: [5, 10, 25, 50],\r\n  });\r\n\r\n  return dataGrid;\r\n};\r\n\r\nexport default BeersGrid;\r\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Search from '../../components/Search';\r\nimport { Beer } from '../../models/Beer.interface';\r\nimport BeerSearchCriteria from '../../models/BeerSearchCriteria.enum';\r\nimport styles from './Beers.module.css';\r\nimport BeerList from './components/beer-list/BeerList';\r\nimport BeerSearchCriteriaDropdown from './components/beer-search-criteria-dropdown/BeerSearchCriteriaDropdown';\r\nimport BeersGrid from './components/beers-grid/BeersGrid';\r\nimport { DisplayTypeContext, DisplayType } from '../../context/DisplayTypeContext';\r\n\r\nconst Beers = () => {\r\n  const apiUrl = 'https://api.punkapi.com/v2';\r\n  const { beerListContainer, searchContainerStyle } = styles;\r\n\r\n  const [beers, setBeers] = useState<Beer[]>([]);\r\n  const [currentSearch, setCurrentSearch] = useState('');\r\n  const [searchCriteria, setSearchCriteria] = useState(BeerSearchCriteria.NAME);\r\n\r\n  const handleSelectionChange = useCallback((event: any) => {\r\n    setSearchCriteria(event.target.value);\r\n  }, []);\r\n\r\n  const handleSearch = (event: ChangeEvent) => {\r\n    const searchedValue = (event.target as HTMLInputElement).value;\r\n    setCurrentSearch(searchedValue);\r\n  };\r\n\r\n  const getSearchParams = (searchString: string, searchCriteriaValue: BeerSearchCriteria) => {\r\n    switch (searchCriteriaValue) {\r\n      case BeerSearchCriteria.NAME:\r\n        return { beer_name: searchString };\r\n      case BeerSearchCriteria.FOOD_PAIRING:\r\n        return { food: searchString.split(' ').join('_') };\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const requestConfig = currentSearch ? { params: getSearchParams(currentSearch, searchCriteria) } : undefined;\r\n\r\n    axios\r\n      .get(`${apiUrl}/beers`, requestConfig)\r\n      .then((result) => result.data)\r\n      .then((result) => setBeers(result));\r\n  }, [currentSearch, searchCriteria]);\r\n\r\n  return (\r\n    <DisplayTypeContext.Consumer>\r\n      {({ displayType, toggleDisplayType }) => {\r\n        const isGridView = displayType === DisplayType.GRID;\r\n\r\n        return (\r\n          <div className='App'>\r\n            <div className={searchContainerStyle}>\r\n              <Search onChange={handleSearch} />\r\n              <BeerSearchCriteriaDropdown searchCriteria={searchCriteria} selectionChangeHandler={handleSelectionChange} />\r\n            </div>\r\n            {isGridView ? <BeersGrid beers={beers} /> : <BeerList beers={beers} />}\r\n          </div>\r\n        );\r\n      }}\r\n    </DisplayTypeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Beers;\r\n","const mappings: { [key: string]: string } = {\r\n  id: 'id',\r\n  name: 'Beer name',\r\n  tagline: 'Tagline',\r\n  first_brewed: 'First brewed',\r\n  description: 'Description',\r\n  abv: 'ABV',\r\n  ibu: 'IBU',\r\n  target_fg: 'Target FG',\r\n  target_og: 'Target OG',\r\n  ebc: 'Color - European Brewery Convention',\r\n  srm: 'Color - Standard Reference Method',\r\n  ph: 'PH',\r\n  attenuation_level: 'Attenuation level',\r\n  brewers_tips: 'Brewers tips',\r\n  contributed_by: 'Contributed by',\r\n};\r\n\r\nexport default mappings;\r\n","import React from 'react';\r\n\r\nimport styles from '../beer-details/BeerDetails.module.css';\r\n\r\ninterface FoodPairingProps {\r\n  pairings: string[];\r\n}\r\n\r\nconst FoodPairing = (props: FoodPairingProps) => {\r\n  const { beerDetailTitle, beerDetailContainer, beerDetailValue } = styles;\r\n  const { pairings } = props;\r\n\r\n  return pairings?.length ? (\r\n    <div className={beerDetailContainer}>\r\n      <p className={beerDetailTitle}>Food pairing:</p>\r\n      <p className={beerDetailValue}>{pairings.join(', ')}</p>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default FoodPairing;\r\n","import React from 'react';\r\nimport { Beer } from '../../../../models/Beer.interface';\r\nimport styles from './BeerDetails.module.css';\r\nimport mappings from '../../../../models/BeerDetailsKeyMappings';\r\nimport FoodPairing from '../food-pairing/FoodPairing';\r\n\r\nconst BeerDetails = (props: any) => {\r\n  const { beerDetailsContainer, beerDetailContainer, beerDetailTitle, beerDetailValue, imageStyle } = styles;\r\n  const beer = { ...props?.location?.state?.beer } as Beer;\r\n\r\n  function getBeerDetailDisplayValue(beerDetailKey: string): string {\r\n    const mapping = mappings[beerDetailKey];\r\n    return mapping || beerDetailKey;\r\n  }\r\n\r\n  return (\r\n    <div className={beerDetailsContainer}>\r\n      <img className={imageStyle} src={beer.image_url} alt={beer.name} />\r\n      <FoodPairing pairings={[...beer.food_pairing]} />\r\n\r\n      <div>\r\n        {Object.keys(beer).map((beerDetail, index) => {\r\n          if (typeof beer[beerDetail as keyof Beer] === 'object' || beerDetail === 'image_url' || beerDetail === 'food_pairing') {\r\n            return;\r\n          }\r\n\r\n          // eslint-disable-next-line consistent-return\r\n          return (\r\n            <div key={`${index.toString() + beer?.name}`} className={beerDetailContainer}>\r\n              <p className={beerDetailTitle}>{getBeerDetailDisplayValue(beerDetail)}</p>\r\n              <p className={beerDetailValue}>{beer[beerDetail as keyof Beer]}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BeerDetails;\r\n","import { FormControlLabel, Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { DisplayType, DisplayTypeContext } from '../context/DisplayTypeContext';\r\n\r\nconst DisplayTypeSwitch = () => {\r\n  return (\r\n    <DisplayTypeContext.Consumer>\r\n      {({ displayType, toggleDisplayType }) => {\r\n        const isChecked = displayType === DisplayType.GRID;\r\n\r\n        return (\r\n          <FormControlLabel\r\n            control={<Switch checked={isChecked} onChange={toggleDisplayType} color='primary' inputProps={{ 'aria-label': 'checkbox with default color' }} />}\r\n            label='Grid View'\r\n          />\r\n        );\r\n      }}\r\n    </DisplayTypeContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default DisplayTypeSwitch;\r\n","import React, { useContext, useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  createStyles,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n  Switch,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport clsx from 'clsx';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { orange, lightBlue, deepPurple, deepOrange } from '@material-ui/core/colors';\r\n\r\nimport { Route, BrowserRouter as Router, Switch as BrowserSwitch } from 'react-router-dom';\r\nimport Beers from '../screens/beers/Beers';\r\nimport BeerDetails from '../screens/beers/components/beer-details/BeerDetails';\r\nimport DisplayTypeSwitch from './DisplayTypeSwitch';\r\n\r\nconst drawerWidth = 240;\r\nconst toolbarHeight = '4rem';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      height: toolbarHeight,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: drawerWidth,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      paddingLeft: '1rem',\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-start',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginTop: toolbarHeight,\r\n      marginRight: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: 0,\r\n    },\r\n  })\r\n);\r\n\r\n// TODO - I shall be renamed to ShellComponent | Dashboard | Root or any other better name\r\nconst Sidemenu = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [darkState, setDarkState] = useState(false);\r\n\r\n  const palletType = darkState ? 'dark' : 'light';\r\n\r\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\r\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      type: palletType,\r\n      primary: {\r\n        main: mainPrimaryColor,\r\n      },\r\n      secondary: {\r\n        main: mainSecondaryColor,\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleThemeChange = () => {\r\n    setDarkState(!darkState);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n\r\n        <AppBar\r\n          position='fixed'\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <Typography variant='h6' noWrap align='center' className={classes.title}>\r\n              Explore the finest beers!\r\n            </Typography>\r\n            <IconButton color='inherit' aria-label='open drawer' edge='end' onClick={handleDrawerOpen} className={clsx(open && classes.hide)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <BrowserSwitch>\r\n              <Route exact path='/' component={Beers} />\r\n              <Route exact path='/beers' component={Beers} />\r\n              <Route exact path='/beers/:id' component={BeerDetails} />\r\n            </BrowserSwitch>\r\n          </Router>\r\n        </main>\r\n\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='right'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={handleDrawerClose}>{theme.direction === 'ltr' ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\r\n            <Typography variant='h6' align='center'>\r\n              Settings\r\n            </Typography>\r\n          </div>\r\n\r\n          <Divider />\r\n\r\n          <DisplayTypeSwitch />\r\n\r\n          <Divider />\r\n\r\n          <FormControlLabel\r\n            control={<Switch checked={darkState} onChange={handleThemeChange} color='primary' inputProps={{ 'aria-label': 'checkbox with default color' }} />}\r\n            label='Dark Mode'\r\n          />\r\n\r\n          <Divider />\r\n\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Sidemenu;\r\n","import React, { useContext, useState } from 'react';\r\nimport './App.css';\r\nimport { DisplayTypeContext, DisplayType } from './context/DisplayTypeContext';\r\nimport Sidemenu from './components/Sidemenu';\r\n\r\nconst App = () => {\r\n  const displayTypeContext = useContext(DisplayTypeContext);\r\n  const [displayType, setDisplayType] = useState(displayTypeContext.displayType);\r\n\r\n  const toggleDisplayType = () => {\r\n    setDisplayType(displayType === DisplayType.GRID ? DisplayType.LIST : DisplayType.GRID);\r\n  };\r\n\r\n  return (\r\n    <DisplayTypeContext.Provider value={{ displayType, toggleDisplayType }}>\r\n      <Sidemenu />\r\n    </DisplayTypeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './index.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beerDetailsContainer\":\"BeerDetails_beerDetailsContainer__2H0-c\",\"imageStyle\":\"BeerDetails_imageStyle__3CUCX\",\"beerDetailContainer\":\"BeerDetails_beerDetailContainer__258iv\",\"beerDetailTitle\":\"BeerDetails_beerDetailTitle__1r4DD\",\"beerDetailValue\":\"BeerDetails_beerDetailValue__sXOYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardStyle\":\"BeerCard_cardStyle__3N-vZ\",\"cardContentStyle\":\"BeerCard_cardContentStyle__3csIF\",\"cardActionsStyle\":\"BeerCard_cardActionsStyle__1runV\",\"beerImageStyle\":\"BeerCard_beerImageStyle__Xp2Iz\"};"],"sourceRoot":""}